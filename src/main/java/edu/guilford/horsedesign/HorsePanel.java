package edu.guilford.horsedesign;

//import static horsedesign.HorseDesign.background;
import java.awt.Color;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.awt.image.BufferedImage;

public class HorsePanel extends javax.swing.JPanel {

    static BufferedImage background;
    JFrame maneWindow;
    JFrame tailWindow;
    JFrame hoofWindow;
    JFrame bodyWindow;

    public static BufferedImage setBackground() throws IOException, URISyntaxException {
        background = ImageIO.read(new File(HorseDesign.class.getResource("/horse_coloring2.png").toURI()));
        return background;
    }

    // Getters and setters for the windows
    public JFrame getBodyWindow() {
        return bodyWindow;
    }

    public void setBodyWindow(JFrame bodyWindow) {
        this.bodyWindow = bodyWindow;
    }

    public JFrame getHoofWindow() {
        return hoofWindow;
    }

    public void setHoofWindow(JFrame hoofWindow) {
        this.hoofWindow = hoofWindow;
    }

    public JFrame getTailWindow() {
        return tailWindow;
    }

    public void setTailWindow(JFrame tailWindow) {
        this.tailWindow = tailWindow;
    }

    public JFrame getManeWindow() {
        return maneWindow;
    }

    public void setManeWindow(JFrame maneWindow) {
        this.maneWindow = maneWindow;
    }

    public HorsePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        instructionsLabel = new javax.swing.JLabel();
        horseLabel = new javax.swing.JLabel();
        tackLabel = new javax.swing.JLabel();
        riderLabel = new javax.swing.JLabel();
        maneButton = new javax.swing.JButton();
        tailButton = new javax.swing.JButton();
        bodyButton = new javax.swing.JButton();
        bridleButton = new javax.swing.JButton();
        reinsButton = new javax.swing.JButton();
        saddleButton = new javax.swing.JButton();
        padButton = new javax.swing.JButton();
        hairButton = new javax.swing.JButton();
        hatButton = new javax.swing.JButton();
        skinButton = new javax.swing.JButton();
        shirtButton = new javax.swing.JButton();
        pantsButton = new javax.swing.JButton();
        bootsButton = new javax.swing.JButton();
        horseImage = new javax.swing.JLabel();
        hoovesButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        instructionsLabel.setText("Click a button you want to change the color of!");

        horseLabel.setText("Horse Color: ");

        tackLabel.setText("Horse Tack:");

        riderLabel.setText("Rider:");

        maneButton.setText("Mane");
        maneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maneButtonActionPerformed(evt);
            }
        });

        tailButton.setText("Tail");
        tailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tailButtonActionPerformed(evt);
            }
        });

        bodyButton.setText("Body");
        bodyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodyButtonActionPerformed(evt);
            }
        });

        bridleButton.setText("Bridle");
        bridleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bridleButtonActionPerformed(evt);
            }
        });

        reinsButton.setText("Reins");

        saddleButton.setText("Saddle");

        padButton.setText("Saddle Pad");

        hairButton.setText("Hair");

        hatButton.setText("Helmet/Hat");

        skinButton.setText("Skin");

        shirtButton.setText("Shirt");

        pantsButton.setText("Pants");

        bootsButton.setText("Boots");

        horseImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/horse_coloring2.png"))); // NOI18N
        horseImage.setText("jLabel1");

        hoovesButton.setText("Hooves");
        hoovesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoovesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(instructionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        758, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(horseLabel)
                                                                        .addComponent(riderLabel))
                                                                .addGap(27, 27, 27)
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(bridleButton)
                                                                        .addComponent(tailButton)
                                                                        .addComponent(maneButton)
                                                                        .addComponent(hairButton)
                                                                        .addComponent(saddleButton)
                                                                        .addComponent(skinButton)
                                                                        .addComponent(shirtButton))
                                                                .addGap(29, 29, 29)
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(hatButton)
                                                                                .addGroup(layout.createSequentialGroup()
                                                                                        .addGroup(layout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                .addComponent(
                                                                                                        bodyButton)
                                                                                                .addComponent(
                                                                                                        hoovesButton)
                                                                                                .addComponent(
                                                                                                        reinsButton))
                                                                                        .addGap(21, 21, 21)))
                                                                        .addComponent(padButton)
                                                                        .addComponent(pantsButton)
                                                                        .addComponent(bootsButton)))
                                                        .addComponent(tackLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        128, Short.MAX_VALUE)
                                                .addComponent(horseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 406,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(71, 71, 71)))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(instructionsLabel)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(horseImage)
                                                .addContainerGap(45, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(horseLabel)
                                                        .addGroup(layout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(maneButton)
                                                                .addComponent(hoovesButton)))
                                                .addGap(31, 31, 31)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(tailButton)
                                                        .addComponent(bodyButton))
                                                .addGap(70, 70, 70)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(tackLabel)
                                                        .addGroup(layout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(bridleButton)
                                                                .addComponent(reinsButton)))
                                                .addGap(29, 29, 29)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(saddleButton)
                                                        .addComponent(padButton))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(hairButton)
                                                        .addComponent(hatButton)
                                                        .addComponent(riderLabel))
                                                .addGap(35, 35, 35)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(skinButton)
                                                        .addComponent(pantsButton))
                                                .addGap(41, 41, 41)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(shirtButton)
                                                        .addComponent(bootsButton))
                                                .addGap(55, 55, 55)))));
    }// </editor-fold>//GEN-END:initComponents

    private void maneButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_maneButtonActionPerformed
        // TODO add your handling code here:
        maneWindow.setVisible(true);
    }// GEN-LAST:event_maneButtonActionPerformed

    private void tailButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tailButtonActionPerformed
        // TODO add your handling code here:
        tailWindow.setVisible(true);
    }// GEN-LAST:event_tailButtonActionPerformed

    private void hoovesButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hoovesButtonActionPerformed
        // TODO add your handling code here:
        hoofWindow.setVisible(true);
    }// GEN-LAST:event_hoovesButtonActionPerformed

    private void bodyButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bodyButtonActionPerformed
        // TODO add your handling code here:
        bodyWindow.setVisible(true);
    }// GEN-LAST:event_bodyButtonActionPerformed

    private void bridleButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bridleButtonActionPerformed
        // TODO add your handling code here:

    }// GEN-LAST:event_bridleButtonActionPerformed

    public void maneColorset(Color maneColor) {
        int width = 130;
        int height = 35;
        int shiftX = 40;
        int shiftY = 165;

        int redClear = 60;
        int greenClear = 60;
        int blueClear = 60;
        int tolerance = 220;

        layerImages(shiftX, shiftY, width, height, maneColor,
                redClear, greenClear, blueClear, tolerance);
        horseImage.setIcon(new ImageIcon(background));
    }

    public void tailColorset(Color tailColor) {
        int width = 70;
        int height = 145;
        int shiftX = 330;
        int shiftY = 250;

        int redClear = 204;
        int greenClear = 204;
        int blueClear = 204;
        int tolerance = 65;

        layerImages(shiftX, shiftY, width, height, tailColor,
                redClear, greenClear, blueClear, tolerance);
        horseImage.setIcon(new ImageIcon(background));
    }

    public void hoofColorset(Color hoofColor) {
        int width = 300;
        int height = 20;
        int shiftX = 90;
        int shiftY = 405;

        int redClear = 204;
        int greenClear = 204;
        int blueClear = 204;
        int tolerance = 70;

        layerImages(shiftX, shiftY, width, height, hoofColor,
                redClear, greenClear, blueClear, tolerance);
        horseImage.setIcon(new ImageIcon(background));
    }

    public void bodyColorset(Color bodyColor) {
        int width = 380;
        int height = 242;
        int shiftX = 10;
        int shiftY = 165;

        int redClear = 204;
        int greenClear = 204;
        int blueClear = 204;
        int tolerance = 65;

        layerImages(shiftX, shiftY, width, height, bodyColor,
                redClear, greenClear, blueClear, tolerance);
        // these are parameters for layer images method
        horseImage.setIcon(new ImageIcon(background));
        // this sets the new layer over the original image
    }

    public void horseClear(Color clearColor) {
        int width = 130;
        int height = 35;
        int shiftX = 40;
        int shiftY = 165;

        int redClear = 60;
        int greenClear = 60;
        int blueClear = 60;
        int tolerance = 220;

        layerImages(shiftX, shiftY, width, height, clearColor,
                redClear, greenClear, blueClear, tolerance);
        horseImage.setIcon(new ImageIcon(background));
    }

    public static void layerImages(int shiftX, int shiftY, int width, int height, Color replaceColor, int redClear,
            int greenClear, int blueClear, double tolerance) {
        WritableRaster raster = background.getRaster();
        int lPixel, red, green, blue;

        // Slow method: scan all input (layer) image pixels, plotting only those which
        // are not
        // the reference color
        for (int w = 0; w < width; w = w + 1) {
            for (int h = 0; h < height; h = h + 1) {
                lPixel = replaceColor.getRGB();
                red = (int) ((lPixel & 0b00000000111111110000000000000000) >>> 16); // Red level
                green = (int) ((lPixel & 0b00000000000000001111111100000000) >>> 8); // Green level
                blue = (int) (lPixel & 0b00000000000000000000000011111111); // Blue level
                // If the pixel color isn't close enough to the specified color of the overlay,
                // draw it on the background
                int[] rPixel = new int[4];
                raster.getPixel(w + shiftX, h + shiftY, rPixel);
                int redP = rPixel[0];
                int greenP = rPixel[1];
                int blueP = rPixel[2];
                if (colorDistance(redP, greenP, blueP, redClear, greenClear, blueClear) < tolerance) {
                    raster.setPixel(w + shiftX, h + shiftY, new int[] { red, green, blue, 255 });
                }
            }
        }

    }

    public static double colorDistance(int red1, int green1, int blue1,
            int red2, int green2, int blue2) {
        double distance;

        int redDist = red1 - red2;
        int greenDist = green1 - green2;
        int blueDist = blue1 - blue2;

        distance = Math.sqrt(redDist * redDist + greenDist * greenDist + blueDist * blueDist);

        return distance;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bodyButton;
    private javax.swing.JButton bootsButton;
    private javax.swing.JButton bridleButton;
    private javax.swing.JButton hairButton;
    private javax.swing.JButton hatButton;
    private javax.swing.JButton hoovesButton;
    private javax.swing.JLabel horseImage;
    private javax.swing.JLabel horseLabel;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JButton maneButton;
    private javax.swing.JButton padButton;
    private javax.swing.JButton pantsButton;
    private javax.swing.JButton reinsButton;
    private javax.swing.JLabel riderLabel;
    private javax.swing.JButton saddleButton;
    private javax.swing.JButton shirtButton;
    private javax.swing.JButton skinButton;
    private javax.swing.JLabel tackLabel;
    private javax.swing.JButton tailButton;
    // End of variables declaration//GEN-END:variables
}
